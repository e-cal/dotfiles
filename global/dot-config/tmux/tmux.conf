set -g default-terminal "xterm-kitty"

set -g history-limit 10000

# 1-indexed windows
set -g base-index 1

# auto-name windows if no name is set
set-window-option -g automatic-rename on
set-option -g set-titles on

# watch for background window activity
setw -g monitor-activity on
set -g bell-action none
set -g visual-bell off
set -sg escape-time 0

# Key Bindings

# prefix: C-Space
set -g prefix C-@

# command to check if in nvim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
setw -g mode-keys vi

# toggle mouse support with m
setw -g mouse on
bind-key m set-option -g mouse\; display-message 'mouse #{?mouse,on,off}'

bind-key ^[ if-shell "$is_vim" "send-keys ^[" "copy-mode"
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# don't auto deselect
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-no-clear

# Copy Mode Bindings

# leave copy-mode with esc
bind-key -T copy-mode-vi ^[ send-keys -X cancel

bind-key -T copy-mode-vi H send-keys -X start-of-line
bind-key -T copy-mode-vi L send-keys -X end-of-line
bind-key -T copy-mode-vi Y send-keys -X copy-line

# Normal Bindings

# reload
bind-key R source-file ~/.config/tmux/tmux.conf

# panes (splits)
bind-key v split-window -h
bind-key s split-window -v
bind-key t run-shell "tm toggle_term"

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind-key -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"

bind-key -n M-Left  if-shell "$is_vim" "send-keys C-Left"   "resize-pane -L"
bind-key -n M-Right if-shell "$is_vim" "send-keys C-Right"  "resize-pane -R"
bind-key -n M-Up    if-shell "$is_vim" "send-keys C-Up"     "resize-pane -U"
bind-key -n M-Down  if-shell "$is_vim" "send-keys C-Down"   "resize-pane -D"

bind-key C-j swap-pane -D
bind-key C-k swap-pane -U

# windows
bind-key n new-window
bind-key r command-prompt -I "#W" "rename-window '%%'"
bind-key b break-pane

bind-key -n S-Right next-window
bind-key -n S-Left  previous-window
# bind-key -n M-Tab if-shell "$is_vim" "send-keys M-Tab" "next-window"

# kill
bind-key Q kill-session
bind-key q kill-window
bind-key w kill-pane

# custom commands
bind-key Enter display-popup -E "tm"
bind-key p command-prompt -p "search from:" "split-window -h 'vs %%'"
bind-key P command-prompt -p "search from:" "split-window -v 'vs %%'"
bind-key e split-window -h "ve"
bind-key E split-window -v "ve"
bind-key BSpace run-shell "tm end main"
bind-key \\ switch-client -l

# Styles
set -g status-bg black
set -g status-fg white
set -g status-interval 60
set -g status-left-length 30
set -g status-right-length 200
set -g status-left '#[fg=black,bg=cyan]  #S #[fg=cyan,bg=black]#[default] '
set -g status-right '#[fg=color8]#(tmux-song)#(tmux-battery)#[fg=color15]#[fg=cyan, bg=color15]  %a %b %d #[fg=cyan]#[fg=black, bg=cyan]  %I:%M%p '

setw -g window-status-style fg='color8',bg='color15'
setw -g window-status-activity-style fg='orange blink',bg='colour15'
setw -g window-status-current-style fg='cyan',bg='colour15'
setw -g window-status-separator ' '
setw -g window-status-format '#[fg=colour237,bg=black]#[default]#W#[fg=colour237,bg=black]'
setw -g window-status-current-format '#[fg=color15,bg=black]#[default]#W#[fg=colour15,bg=black]'

set-option -ga pane-active-border-style bg=default,fg=color8
set-option -ga pane-border-style bg=default,fg=color8
