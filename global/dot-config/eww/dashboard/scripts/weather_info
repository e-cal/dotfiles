#!/bin/bash

## Collect data
cache_dir="$HOME/.cache/eww/weather"
cache_weather_stat=${cache_dir}/weather-stat
cache_weather_degree=${cache_dir}/weather-degree
cache_weather_feels=${cache_dir}/weather-feels
cache_weather_quote=${cache_dir}/weather-quote
cache_weather_hex=${cache_dir}/weather-hex
cache_weather_icon=${cache_dir}/weather-icon

## Weather data
KEY="965605689030d82160ac8fd635501be5"
LAT=43.3862
LON=-79.8371
UNIT="metric"

## Make cache dir
if [[ ! -d "$cache_dir" ]]; then
	mkdir -p ${cache_dir}
fi

## Get data
get_weather_data() {
	weather=$(curl -sf "http://api.openweathermap.org/data/2.5/weather?lat=$LAT&lon=$LON&appid=$KEY&units=$UNIT")

	if [ ! -z "$weather" ]; then
		weather_temp=$(echo "$weather" | jq ".main.temp" | cut -d "." -f 1)
		weather_icon_code=$(echo "$weather" | jq -r ".weather[].icon" | head -1)
		weather_description=$(echo "$weather" | jq -r ".weather[].description" | head -1 | sed -e "s/\b\(.\)/\u\1/g")
		weather_feels=$(echo "$weather" | jq ".main.feels_like" | cut -d "." -f 1)

		if [ "$weather_icon_code" == "50d" ]; then
			weather_icon=" "
			weather_hex="#84afdb"
		elif [ "$weather_icon_code" == "50n" ]; then
			weather_icon=" "
			weather_hex="#84afdb"
		elif [ "$weather_icon_code" == "01d" ]; then
			weather_icon="󰖙 "
			weather_hex="#ffd86b"
		elif [ "$weather_icon_code" == "01n" ]; then
			weather_icon=" "
			weather_hex="#fcdcf6"
		elif [ "$weather_icon_code" == "02d" ]; then
			weather_icon="󰖕 "
			weather_hex="#adadff"
		elif [ "$weather_icon_code" == "02n" ]; then
			weather_icon="󰼱 "
			weather_hex="#adadff"
		elif [ "$weather_icon_code" == "03d" ]; then
			weather_icon="󰖐 "
			weather_hex="#adadff"
		elif [ "$weather_icon_code" == "03n" ]; then
			weather_icon="󰖐 "
			weather_hex="#adadff"
		elif [ "$weather_icon_code" == "04d" ]; then
			weather_icon=" " # 
			weather_hex="#adadff"
		elif [ "$weather_icon_code" == "04n" ]; then
			weather_icon=" "
			weather_hex="#adadff"
		elif [ "$weather_icon_code" == "09d" ]; then
			weather_icon=" "
			weather_hex="#6b95ff"
		elif [ "$weather_icon_code" == "09n" ]; then
			weather_icon=" "
			weather_hex="#6b95ff"
		elif [ "$weather_icon_code" == "10d" ]; then
			weather_icon=" "
			weather_hex="#6b95ff"
		elif [ "$weather_icon_code" == "10n" ]; then
			weather_icon=" "
			weather_hex="#6b95ff"
		elif [ "$weather_icon_code" == "11d" ]; then
			weather_icon=" "
			weather_hex="#ffeb57"
		elif [ "$weather_icon_code" == "11n" ]; then
			weather_icon=""
			weather_hex="#ffeb57"
		elif [ "$weather_icon_code" == "13d" ]; then
			weather_icon=" "
			weather_hex="#e3e6fc"
		elif [ "$weather_icon_code" == "13n" ]; then
			weather_icon=" "
			weather_hex="#e3e6fc"
		else
			weather_icon=" "
			weather_hex="#adadff"
			notify-send "Unkown weather icon" "$weather_icon_code"
		fi

		echo "$weather_icon" >${cache_weather_icon}
		echo "$weather_description" >${cache_weather_stat}
		echo "$weather_temp""°C" >${cache_weather_degree}
		echo "$weather_hex" >${cache_weather_hex}
		echo "feels like $weather_feels°C" >${cache_weather_feels}
	else
		echo "Weather Unavailable" >${cache_weather_stat}
		echo " " >${cache_weather_icon}
		echo "-" >${cache_weather_degree}
		echo "#adadff" >${tcache_weather_hex}
	fi
}

get_weather_data
if [[ "$1" == "--icon" ]]; then
	cat ${cache_weather_icon}
elif [[ "$1" == "--temp" ]]; then
	cat ${cache_weather_degree}
elif [[ "$1" == "--feels" ]]; then
	cat ${cache_weather_feels}
elif [[ "$1" == "--hex" ]]; then
	cat ${cache_weather_hex}
elif [[ "$1" == "--stat" ]]; then
	cat ${cache_weather_stat}
fi
