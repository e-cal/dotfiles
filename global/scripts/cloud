#!/usr/bin/env bash
source parseargs

if [[ -n ${booleans[h]} ]]; then
    echo "TODO: help"
    exit
fi

[[ $# = 0 ]] && cloud sync && exit

get_bucket() {
    # Get existing bucket
    buckets=( `rclone lsf cloud: | tr -d "/"` )
    buckets+=" ALL"

    # Select bucket
    bucket=${args[1]}
    [[ $bucket == "all" ]] && bucket="ALL"
    [[ -z $bucket || ! " ${buckets[@]} " =~ " $bucket " ]] && \
        bucket=`printf "%s\n" ${buckets[@]} | fzf --header="buckets" --info="hidden"`
    [[ -z $bucket ]] && exit 1
    [[ $bucket == "ALL" ]] && bucket=""
}

case ${args[0]} in
    upload | u)
        get_bucket
        echo "Uploading..."
        if [[ -n ${booleans[t]} ]]; then
            rclone sync --progress $HOME/cloud/$bucket cloud:$bucket --dry-run
        else
            rclone sync --progress $HOME/cloud/$bucket cloud:$bucket
        fi
        ;;
    download | d)
        get_bucket
        echo "Downloading..."
        if [[ -n ${booleans[t]} ]]; then
            rclone sync --progress cloud:$bucket $HOME/cloud/$bucket --dry-run
        else
            rclone sync --progress cloud:$bucket $HOME/cloud/$bucket
        fi
        ;;
    backup | b)
        echo "Backing up..."
        mkdir -p $HOME/backup
        cp -r $HOME/cloud/$bucket $HOME/backup/
        ;;
    autosync)
        interval=${args[1]}
        [[ -z $interval ]] && interval=5
        printf "Starting auto sync at ""$interval""m intervals\n\n"
        while true
        do
            sleep "$interval""m"
            cloud upload all --log-file ~/.local/share/rclone/cloud-autosync.log -P
            echo
        done
        ;;
    *)
        echo "WARNING: boolean flags will be ignored"
        echo -n "(u)pload, (d)ownload, (q)uit? "
        rst_stty=$(stty -g)
        stty raw -echo
        sel=$( while ! head -c 1 | grep -i '[udq]'; do true; done )
        stty $rst_stty

        case $sel in
            u)
                echo upload
                cloud upload ${args[@]:1}
                ;;
            d)
                echo download
                cloud dowload ${args[@]:1}
                ;;

            q)
                echo quit
                exit
                ;;
        esac
        ;;
esac
