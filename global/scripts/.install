#!/usr/bin/env bash

# Set DOTFILES
[[ -z $DOTFILES ]] && DOTFILES="$HOME/.dotfiles"

# Set HOST_DOTFILES
[[ -z $HOST_DOTFILES ]] && HOST_DOTFILES="$HOME/.dotfiles/$HOSTNAME"

# [[ ! -d $HOST_DOTFILES ]] && echo "dotfile dir for $HOSTNAME does not exist ($HOST_DOTFILES)"

[[ ! -d $HOST_DOTFILES ]] && mkdir $HOST_DOTFILES

# Install submodules
# need to set up git ssh key first

# ssh-keygen -t ed25519 -C "ethan@ecal.dev" -N "" -f ~/.ssh/id_ed25519
# eval "$(ssh-agent -s)"
# ssh-add ~/.ssh/id_ed25519
#
# get github-cli
# gh auth login -h github.com -p ssh
# above has to be interactive, needs browser first
#
# this whole section has to be post browser install

if [[ -z "$(ls -A ~/.dotfiles/global/dot-config/nvim)" ]]; then
	echo "Initializing submodules..."
	rm -rf ~/.dotfiles/global/dot-config/nvim
	cd $DOTFILES
	git submodule update --init --recursive
fi

# Check distro
echo "Checking distribution..."
hostnamectl | grep "Arch Linux" -q
if [[ $? != 0 ]] && [[ $HOSTNAME != "raspberrypi" ]]; then
	echo "Install only supports Arch Linux"
	exit
fi
echo

# Install dependencies
# ask to install dependencies, if yes just do them all

echo "Installing dependencies..."

# paru
git clone https://aur.archlinux.org/paru.git
cd paru
makepkg -si
cd ..
rm -rf paru

# terminal programs
sudo pacman -S --noconfirm stow zsh tmux lua go npm zip unzip neovim python lolcat starship exa fzf ripgrep jq jc socat pamixer pulseaudio-alsa alsa-utils inetutils bat lazygit

echo "export ZDOTDIR=$HOME/.config/zsh" | sudo tee -a /etc/zsh/zshenv
chsh -s /usr/bin/zsh

# graphics programs
paru -S --noconfirm ttf-jetbrains-mono-nerd ttf-fantasque-nerd ttf-material-icons-git hyprland kitty firefox thunderbird eww-wayland pavucontrol slack anki obsidian blueberry

echo
exit

# Make dirs
echo "Creating directories..."
[[ -d $HOME/.config ]] || mkdir $HOME/.config
[[ -d $HOME/.config/zsh ]] || mkdir $HOME/.config/zsh

if [[ ! -L $HOME/.config/mimeapps.list ]]; then
	[[ -f $HOME/.config/mimeapps.list ]] && rm $HOME/.config/mimeapps.list
fi
if [[ ! -L $HOME/.config/user-dirs.dirs ]]; then
	[[ -f $HOME/.config/user-dirs.dirs ]] && rm $HOME/.config/user-dirs.dirs
fi

echo
echo "Generating $HOSTNAME dotfiles..."
stow --dir=$DOTFILES --target=$HOST_DOTFILES global --dotfiles -R

echo "Linking $HOSTNAME dotfiles..."
stow $HOSTNAME -R
