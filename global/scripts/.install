#!/usr/bin/env bash

# Set DOTFILES
[[ -z $DOTFILES ]] && DOTFILES="$HOME/.dotfiles"

# Set HOST_DOTFILES
[[ -z $HOST_DOTFILES ]] && HOST_DOTFILES="$HOME/.dotfiles/$HOSTNAME"

# [[ ! -d $HOST_DOTFILES ]] && echo "dotfile dir for $HOSTNAME does not exist ($HOST_DOTFILES)"

[[ ! -d $HOST_DOTFILES ]] && mkdir $HOST_DOTFILES

confirm() {
	if [[ $# > 0 ]]; then
		message="$@ (y/n) "
	else
		message="Continue? (y/n) "
	fi

	printf "$message"
	old_stty_cfg=$(stty -g)
	stty raw -echo
	answer=$(while ! head -c 1 | grep -i '[ny]'; do true; done)
	stty $old_stty_cfg

	if [ "$answer" != "${answer#[Yy]}" ]; then
		echo Yes
		return 0
	else
		echo No
		return 1
	fi
}

# Install dependencies
if [[ `hostnamectl | grep -q "Arch Linux"` ]] && confirm "Install dependencies?"; then
	if confirm "Install paru?"; then
		git clone https://aur.archlinux.org/paru.git
		cd paru
		makepkg -si
		cd ..
		rm -rf paru
	fi

	if confirm "Install terminal programs?"; then
		sudo pacman -S --noconfirm stow \
			zsh \
			tmux \
			lua \
			go \
			npm \
			zip \
			unzip \
			neovim \
			python \
			lolcat \
			starship \
			exa \
			fzf \
			ripgrep \
			jq \
			jc \
			socat \
			pamixer \
			pulseaudio-alsa \
			alsa-utils \
			inetutils \
			bat \
			lazygit \
			rclone \
			fuse3 \
			ntp \
			wl-clipboard \
			bat \
			imagemagick \
			github-cli \
			wget

		echo "export ZDOTDIR=$HOME/.config/zsh" | sudo tee -a /etc/zsh/zshenv
		chsh -s /usr/bin/zsh
	fi

	if confirm "Sync clock?"; then
		sudo systemctl enable ntpd.service
		sudo systemctl start ntpd.service
		sudo timedatectl set-ntp true
	fi

	if confirm "Install graphics programs?"; then
		paru -S --noconfirm ttf-jetbrains-mono-nerd \
			ttf-fantasque-nerd \
			ttf-material-icons-git \
			noto-fonts-emoji \
			hyprland \
			hyprpaper \
			kitty \
			firefox \
			thunderbird \
			eww-wayland \
			pavucontrol \
			slack \
			anki \
			obsidian \
			blueberry \
			dunst \
			sweet-cursor-theme-git \
			pipewire wireplumber \
			qt5-wayland \
			qt6-wayland \
			nemo \
			zathura \
			zathura-pdf-mupdf \
			polkit-kde-agent \
			xdg-desktop-portal-hyprland \
			playerctl \
            rofi \
            drun \
            grim \
            slurp \
            flameshot-git
	fi
elif hostnamectl | grep -q "NixOS" && confirm "Copy configuration.nix and switch?"; then
    sudo cp ~/.dotfiles/global/dot-config/nixos/configuration.nix /etc/nixos/configuration.nix
    sudo nixos-rebuild switch
    # ~/.dotfiles/global/scripts/rebuild
fi

# Check for core dependencies
[[ ! `command -v git` ]] && echo "missing git" && exit 1
[[ ! `command -v stow` ]] && echo "missing stow" && exit 1

if confirm "Set up github ssh?"; then
	ssh-keygen -t ed25519 -C "ethan@ecal.dev" -N "" -f ~/.ssh/id_ed25519
	eval "$(ssh-agent -s)"
	ssh-add ~/.ssh/id_ed25519
    gh auth login -h github.com -p ssh
fi

if confirm "Install submodules?"; then
	git submodule update --init --recursive
fi


if confirm 'Prepare directories? (Recommended to avoid conflicts)'; then
    # Make dirs
    [[ -d $HOME/.config ]] || mkdir $HOME/.config
    [[ -d $HOME/.config/zsh ]] || mkdir $HOME/.config/zsh
    [[ -d $HOME/.config/jupyter ]] || mkdir $HOME/.config/jupyter
    [[ -d "$HOME/.config/Code - Insiders" ]] || mkdir "$HOME/.config/Code - Insiders"
    [[ -d $HOME/.config/wgetrc ]] || touch $HOME/.config/wgetrc

    # Remove common conflicts
    [[ ! -L $HOME/.config/mimeapps.list ]] && [[ -f $HOME/.config/mimeapps.list ]] && rm $HOME/.config/mimeapps.list
    [[ ! -L $HOME/.config/user-dirs.dirs ]] && [[ -f $HOME/.config/user-dirs.dirs ]] && rm $HOME/.config/user-dirs.dirs
    [[ ! -L $HOME/.config/hypr/hyprland.conf ]] && [[ -f $HOME/.config/hypr/hyprland.conf ]] && rm $HOME/.config/hypr/hyprland.conf

fi

if confirm "Generate dotfiles for $HOSTNAME?"; then
    stow --dir=$DOTFILES --target=$HOST_DOTFILES global --dotfiles -R
fi

if confirm "Link dotfiles?"; then
    stow $HOSTNAME -R
fi

if confirm "Run housekeeping?"; then
    $HOME/scripts/housekeeping
fi
