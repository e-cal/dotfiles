#!/usr/bin/env bash

if [[ $1 == "-h" ]]; then
    echo "Usage:"
    echo "        .sync bucket [(u)pload/(d)ownload/(b)ackup]"
    echo
    echo -e "WARNING: upload overwrites cloud, download overwrites local"
    exit
fi

# Get existing bucket
buckets=( `rclone lsf cloud: | tr -d "/"` )
buckets+=" ALL"
    
# Select bucket
bucket=$1
[[ $bucket == "all" ]] && bucket="ALL"
[[ -z $bucket || ! " ${buckets[@]} " =~ " $bucket " ]] && \
bucket=`printf "%s\n" ${buckets[@]} | fzf --header="buckets" --info="hidden"`
[[ -z $bucket ]] && exit 1
[[ $bucket == "ALL" ]] && bucket=""

# Select operation
op=$2
ops=( "upload" "download" "backup (local)" "test run" )
case $op in
    upload | u)
        echo "Uploading..."
        rclone sync --progress $HOME/cloud/$bucket cloud:$bucket
        ;;
    download | d)
        echo "Downloading..."
        rclone sync --progress cloud:$bucket $HOME/cloud/$bucket 
        ;;
    backup | b)
        echo "Backing up..."
        mkdir -p $HOME/backup/$bucket 
        cp -r $HOME/cloud/$bucket $HOME/backup/
        ;;
    test | t)
        ops=( "upload" "download" )
        op=`printf "%s\n" "${ops[@]}" | fzf --header="buckets" --info="hidden" | awk '{ print $1 }'`
        [[ -z $op ]] && exit 1
        case $op in
            upload)
                rclone sync --progress --dry-run $HOME/cloud/$bucket cloud:$bucket
                ;;
            download)
                rclone sync --progress --dry-run cloud:$bucket $HOME/cloud/$bucket
                ;;
        esac
        ;;
    *)
        op=`printf "%s\n" "${ops[@]}" | fzf --header="buckets" --info="hidden" | awk '{ print $1 }'`
        [[ -z $bucket ]] && bucket="all"
        .sync $bucket $op
        exit
        ;;
esac
