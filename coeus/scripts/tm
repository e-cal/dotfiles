#!/usr/bin/env bash

# To use, add this script to your path, and make sure it is executable

# To auto-launch with your terminal, add -c "tm startup || exec [shell]" to
# your shell in your terminal config. See coeus/.config/kitty/kitty.conf for
# an example.

# To enable the floating window in tmux, add this line to your tmux.conf:
# bind-key Enter display-popup -E "tm"
# this binds the popup to <prefix>Enter

# Change the shell and startcmd (an empty string works too) to suit you
shell="zsh"
startcmd="triangles && echo"


# Customize the projects map for quick launching project specific sessions
# NOTE: the name will also be the name of the session and the path will be the
#       startup path for the session (unless otherwise specified)
# See the project case below (near the end of the file) for customizing project
# specific behaviour
declare -A projects=(
    # ["name"]="path"
    ["website"]="$HOME/projects/ecal.dev"
    ["hackerrank"]="$HOME/projects/hackerrank"
    ["school"]=""
    )

if [[ -n $startcmd ]]; then
    startcmd="$startcmd && exec $shell"
else
    startcmd="exec $shell"
fi

sessions=`tmux ls 2>/dev/null | awk '{print $1}' | sed 's/://'`

not_in_tmux() {
    [[ -z $TMUX ]]
}

session_exists() {
    tmux has-session -t $1 &> /dev/null && true
}

attach_session() {
    if not_in_tmux; then
        if ! session_exists $1; then
            tmux new -s $1 -n main "$startcmd"
        else
            tmux attach -t $1
        fi
    else
        if ! session_exists $1; then
            tmux new -s $1 -d -n main "$startcmd"
        fi
        tmux switch -t $1
    fi
}

if [[ $# == 0 ]]; then
    if [[ -z $sessions ]]; then
        sel="NEW"
    else
        sessions="$sessions PROJECT NEW END KILL"
        sel=`printf "%s\n" $sessions | fzf --header="tmux menu" --info="hidden"`
        [[ -z $sel ]] && exit 1
    fi

    case $sel in
        PROJECT)
            tm project
            ;;
        NEW)
            tm new
            ;;
        END)
            tm end
            ;;
        KILL)
            tm kill
            ;;
        *)
            tm attach $sel
            ;;
    esac
else
    case $1 in
        new | n)
            if [[ -z $2 ]]; then
                name=`read -p "session name: " -e tmp; echo $tmp`
            else
                name=$2
            fi
            [[ -z $name ]] && echo "no session name" && exit 1

            cd ~
            attach_session $name
            ;;
        attach | a)
            if [[ -z $2 ]]; then
                sessions="$sessions NEW"
                name=`printf "%s\n" $sessions | fzf --header="attach menu" --info="hidden"`
            else
                name=$2
            fi
            [[ -z $name ]] && echo "no session name" && exit 1

            if [[ $name == "NEW" ]]; then
                tm new
            else
                attach_session $name
            fi
            ;;
        kill | k | x)
            if [[ -n $sessions ]]; then
                if [[ -n $2 ]]; then
                    sel=$2
                else
                    sessions="$sessions ALL"
                    sel=`printf "%s\n" $sessions | fzf --header="kill menu" --info="hidden"`
                    [[ -z $sel ]] && exit 0
                fi

                if [[ $sel == "ALL" ]]; then
                    tmux kill-server
                else
                    tmux kill-session -t $sel
                fi
            else
                echo "no tmux sessions"
                exit 1
            fi
            ;;
        end | e | q)
            not_in_tmux && echo "not in a tmux session, nothing to end" && exit 1
            old=`tmux display-message -p '#S'`
            tm attach && [[ `tmux display-message -p '#S'` != $old ]] && tm kill $old
            ;;
        startup | s)
            wtitle=`wmctrl -l | rg $(xprop -root _NET_ACTIVE_WINDOW | awk '{print $5}' | sed 's/0x//') | awk '{print $4}'`
            if [[ $wtitle == "scratch" ]]; then
                attach_session "scratch"
            else
                if session_exists "main"; then
                    tm
                else
                    tmux new -s main -n main "$startcmd"
                fi
            fi
            ;;

        project | p)
            if [[ -n $2 ]]; then
                sel=$2
            else
                sel=`printf "%s\n" ${!projects[@]} | fzf --header="project menu" --info="hidden"`
            fi
            [[ -z $sel ]] && exit 0

# ========= CUSTOMIZE PROJECT BEHAVIOUR HERE ===================================
            case $sel in
                # Special cases
                school)
                    declare -A courses=(
                        ["paradigms"]="cisc360"
                        ["os"]="cisc324"
                        ["nn"]="cisc452"
                        ["comm"]="comm221"
                        ["psyc"]="psyc271"
                        ["ta"]="cisc204"
                        )
                    sel=`printf "%s\n" ${!courses[@]} | fzf --header="course menu" --info="hidden"`
                    [[ -z $sel ]] && exit 0

                    dir=${courses[$sel]}
                    cd "$HOME/Dropbox/uni/3F/$dir"
                    attach_session $sel
                    cd - &>/dev/null
                    ;;

                # Default behaviour
                *)
                    dir=${projects[$sel]}
                    cd $dir
                    attach_session $sel
                    cd - &>/dev/null
                    ;;
# ==============================================================================
            esac
            ;;
        *)
            echo "Usage: tm [new [session-name] | attach [session-name] | kill [session-name] | startup | end]"
            echo
            echo "Main menu: tm"
    esac
fi

