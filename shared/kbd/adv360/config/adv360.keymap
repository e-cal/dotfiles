/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

// https://zmk.dev/docs/codes

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

    hm: homerow_mod {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
    hml: homerow_mod_left {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS_LEFT";
        #binding-cells = <2>;
        tapping-term-ms = <500>;
        flavor = "tap-unless-interrupted";
        // hold-trigger-key-positions -> list of keys (pos idx as below) that CAN get the mod (others force tap)
// <0>           <1>           <2>           <3>            <4>              <5>         <6>                                                                 <7>           <8>        <9>              <10>          <11>           <12>         <13>
// <14>          <15>          <16>          <17>           <18>             <19>        <20>                                                                <21>          <22>       <23>             <24>          <25>           <26>         <27>
// <28>          <29>          <30>          <31>           <32>             <33>        <34>            <35>        <36>             <37>       <38>        <39>          <40>       <41>             <42>          <43>           <44>         <45>
// <46>          <47>          <48>          <49>           <50>             <51>                                    <52>             <53>                                 <54>       <55>             <56>          <57>           <58>         <59>
// <60>          <61>          <62>          <63>           <64>                         <65>            <66>        <67>             <68>       <69>        <70>                     <71>             <72>          <73>           <74>         <75>
// exclude only homerow of left hand
        hold-trigger-key-positions = <0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>, <15>, <16>, <17>, <18>, <19>, <20>, <21>, <22>, <23>, <24>, <25>, <26>, <27>, <28>, <34>, <35>, <36>, <37>, <38>, <39>, <40>, <41>, <42>, <43>, <44>, <45>, <46>, <47>, <48>, <49>, <50>, <51>, <52>, <53>, <54>, <55>, <56>, <57>, <58>, <59>, <60>, <61>, <62>, <63>, <64>, <65>, <66>, <67>, <68>, <69>, <71>, <72>, <73>, <74>, <75>;
        bindings = <&kp>, <&kp>;
    };
    hmr: homerow_mod_right {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS_RIGHT";
        #binding-cells = <2>;
        tapping-term-ms = <500>;
        flavor = "tap-unless-interrupted";
        // hold-trigger-key-positions -> list of keys (pos idx as below) that CAN get the mod (others force tap)
// <0>           <1>           <2>           <3>            <4>              <5>         <6>                                                                 <7>           <8>        <9>              <10>          <11>           <12>         <13>
// <14>          <15>          <16>          <17>           <18>             <19>        <20>                                                                <21>          <22>       <23>             <24>          <25>           <26>         <27>
// <28>          <29>          <30>          <31>           <32>             <33>        <34>            <35>        <36>             <37>       <38>        <39>          <40>       <41>             <42>          <43>           <44>         <45>
// <46>          <47>          <48>          <49>           <50>             <51>                                    <52>             <53>                                 <54>       <55>             <56>          <57>           <58>         <59>
// <60>          <61>          <62>          <63>           <64>                         <65>            <66>        <67>             <68>       <69>        <70>                     <71>             <72>          <73>           <74>         <75>
// exclude only homerow of right hand
        hold-trigger-key-positions = <0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>, <15>, <16>, <17>, <18>, <19>, <20>, <21>, <22>, <23>, <24>, <25>, <26>, <27>, <28>, <29>, <30>, <31>, <32>, <33>, <34>, <35>, <36>, <37>, <38>, <39>, <45>, <46>, <47>, <48>, <49>, <50>, <51>, <52>, <53>, <54>, <55>, <56>, <57>, <58>, <59>, <60>, <61>, <62>, <63>, <64>, <65>, <66>, <67>, <68>, <69>, <71>, <72>, <73>, <74>, <75>;
        bindings = <&kp>, <&kp>;
    };

    sticky_shift: sticky_shift {
        compatible = "zmk,behavior-tap-dance";
        label = "STICKY_SHIFT";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp LSHIFT>, <&caps_word>;

    };

    back_del: back_del {
        compatible = "zmk,behavior-mod-morph";
        label = "BACK_DEL";
        #binding-cells = <0>;
        bindings = <&kp BACKSPACE>, <&kp DELETE>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    n1: plus_1 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        label = "plus_1";
        bindings = <&kp N1>, <&kp LS(EQUAL)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    n2: lbkt_2 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        label = "lbkt_2";
        bindings = <&kp N2>, <&kp LBKT>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    n3: lbrc_3 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        label = "lbrc_3";
        bindings = <&kp N3>, <&kp LS(LBKT)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    n4: lpar_4 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        label = "lpar_4";
        bindings = <&kp N4>, <&kp LS(N9)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    n5: hash_5 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        label = "hash_5";
        bindings = <&kp N5>, <&kp LS(N3)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    n6: equal_6 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        label = "equal_6";
        bindings = <&kp N6>, <&kp EQUAL>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    n7: rpar_7 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        label = "rpar_7";
        bindings = <&kp N7>, <&kp LS(N0)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    n8: rbrc_8 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        label = "rbrc_8";
        bindings = <&kp N8>, <&kp LS(RBKT)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    n9: rbkt_9 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        label = "rbkt_9";
        bindings = <&kp N9>, <&kp RBKT>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    n0: astk_0 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        label = "astk_0";
        bindings = <&kp N0>, <&kp LS(N8)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        layer_0 {
bindings = <
&kp GRAVE     &n1           &n2           &n3            &n4              &n5         &tog 1                                                              &mo 3         &n6        &n7              &n8           &n9            &n0            &kp DELETE
&kp TAB       &kp Q         &kp W         &kp E          &kp R            &kp T       &kp K_COPY                                                          &kp C_VOL_UP  &kp Y      &kp U            &kp I         &kp O          &kp P          &kp BSLH
&lt 2 ESC     &kp A         &kp S         &hml LSHIFT D  &kp F            &kp G       &kp K_PASTE     &kp LALT    &kp LCTRL        &kp RCTRL  &kp CAPS    &kp C_VOL_DN  &kp H      &kp J            &hmr RSHIFT K &kp L          &kp SEMI       &kp SQT
&sticky_shift &hmr LALT Z   &kp X         &kp C          &kp V            &kp B                                   &none            &none                                &kp N      &kp M            &kp COMMA     &kp DOT        &hmr RALT FSLH &kp RSHFT
&kp LCTRL     &kp LS(GRAVE) &kp LS(N2)    &kp LS(N5)     &kp LS(N7)                   &kp BACKSPACE   &kp LMETA   &mo 1            &mo 1      &kp ENTER   &kp SPACE                &kp MINUS        &kp LS(N6)    &kp LS(N4)     &kp LS(N1)     &kp RCTRL
>;                                                                                                                                                                                                                     
        };                                                                                                                                                                                                             
                                                                                                                                                                                                                       
        layer_1 {                                                                                                                                                                                                 
bindings = <                                                                                                                                                                                               
&kp F1      &kp F2         &kp F3        &kp F4         &kp F5         &kp F6          &none                                                               &none         &kp F7         &kp F8       &kp F9        &kp F10       &kp F11      &kp F12
&none       &none          &none         &kp LC(E)      &none          &none           &none                                                               &none         &kp LC(Y)      &none        &none         &none         &none        &none 
&tog 1      &none          &none         &none          &none          &none           &none           &none       &none            &none      &none       &none         &kp LA(H)      &kp LA(J)    &kp LA(K)     &kp LA(L)     &none        &none 
&none       &kp LS(GRAVE)  &kp LS(N2)    &kp LS(N3)     &kp LS(N7)     &none                                       &none            &none                                &kp LS(MINUS)  &kp MINUS    &kp LS(N6)    &kp LS(N4)    &kp LS(N1)   &none
&none       &none          &none         &none          &none                          &none           &none       &none            &none      &none       &none                        &none        &none         &none         &none        &none 
>;
        };

        layer_2 {
bindings = <                                                                                                                                                                                               
&none       &none          &none         &none          &none          &none           &none                                                               &none         &none          &none        &none         &none         &none        &none 
&none       &none          &none         &none          &none          &none           &none                                                               &none         &kp HOME       &kp LS(LEFT) &none         &kp LS(RIGHT) &kp END      &none     
&none       &none          &none         &none          &none          &none           &none           &none       &none            &none      &none       &none         &kp LEFT       &kp DOWN     &kp UP        &kp RIGHT     &none        &none  
&none       &kp LS(GRAVE)  &kp LS(N2)    &kp LS(N3)     &kp LS(N7)     &none                                       &none            &none                                &kp LS(MINUS)  &kp MINUS    &kp LS(N6)    &kp LS(N4)    &kp LS(N1)   &none
&none       &none          &none         &none          &none                          &kp DELETE      &none       &none            &none      &none       &none                        &kp MINUS    &kp LS(N6)    &kp LS(N4)    &kp LS(N1)   &none
>;
        };

        layer_3_bootloader {
bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
&none         &none         &none         &none         &none         &none            &bootloader                                                                           &none   &none       &none       &none   &none   &none   &none
&none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
&none         &none         &none         &none         &none         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
&none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_DEC  &bl BL_INC   &none   &none   &none
            >;
        };
    };
};
