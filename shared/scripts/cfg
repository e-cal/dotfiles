#!/usr/bin/env zsh

# list of top level config dirs
dirs=(
    shared $SHARED_DOTFILES
    host $HOST_DOTFILES
    "local" $XDG_CONFIG_HOME
    dotfiles $DOTFILES
    scripts $HOST_DOTFILES/scripts
    projects ~/projects
    adv ~/kbd/Adv360-Pro-ZMK
)

# Add tracked host config dirs
for dir in "$HOST_DOTFILES/.config"/*; do
    if [[ -d "$dir" ]]; then
        dir_name=$(basename "$dir")
        if [[ "$dir_name" == *" "* ]]; then
            continue
        fi
        # Check if the directory name already exists in $dirs
        if [[ ! " ${dirs[@]} " =~ " ${dir_name} " ]]; then
            # Append the directory name and path to the $dirs array
            dirs+=("$dir_name" "$dir")
        fi
    fi
done

# Add any untracked local config dirs
for dir in "$XDG_CONFIG_HOME"/*; do
    if [ -d "$dir" ]; then
        dir_name=$(basename "$dir")
        if [[ "$dir_name" == *" "* ]]; then
            continue
        fi
        # Check if the directory name already exists in $dirs
        if [[ ! " ${dirs[@]} " =~ " ${dir_name} " ]]; then
            # Append the directory name and path to the $dirs array
            dirs+=("$dir_name" "$dir")
        fi
    fi
done

# print everything in dirs (key and value)
# for (( i=1; i<=$#dirs; i+=2 )); do
#     echo "${dirs[$i]}: ${dirs[$i+1]}"
# done

# get args
tmux=false
file=false
while [[ $# -gt 0 ]]; do
    case "$1" in
        tmux) tmux=true ;;
        file) file=true ;;
        *) break ;;
    esac
    shift
done

fzfcmd="fzf --with-nth 1"
if [[ $tmux == false ]]; then
    fzfcmd="$fzfcmd --height=20% --border --layout=reverse"
fi

# select top level dir
sel=`printf "%s %s\n" $dirs | eval "$fzfcmd"`
name=`echo "$sel" | awk '{print $1}'`
dir=`echo "$sel" | awk '{print $2}'`

# select file
if [[ $file == true ]] ; then
    [[ -z $dir ]] && exit

    files=`find -L "$dir" -type f -printf "%f %p\n"`
    sel=`printf "%s\n" $files | eval "$fzfcmd"`
    file=`echo "$sel" | awk '{print $2}'`

    if [[ $tmux == true ]] && [[ ! -z $file ]]; then
        tmux new-window -n "cfg-$name" -c "$dir" -d
        echo $?
        tmux send-keys -t "cfg-$name" "nvim $file" ENTER
        echo $?
        tmux select-window -t "cfg-$name"
        echo $?
    else
        echo "$file"
    fi

else
    if [[ $tmux == true ]] && [[ ! -z $dir ]]; then
        tmux new-window -n "cfg-$name" -c "$dir" -d
        tmux send-keys -t "cfg-$name" "clear; la" ENTER
        tmux select-window -t "cfg-$name"
    else
        echo "$dir"
    fi
fi


