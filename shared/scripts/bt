#!/usr/bin/env bash

DEVFILE=$HOME/.config/bt/devices


pid=$(pgrep "bluetoothctl")

[[ -n $pid ]] && notify-send "bluetoothctl running" "PID: $pid" -i ~/.config/dunst/images/bluetooth.png && exit

# Power on bluetooth controller
[[ $(bluetoothctl show | rg "Powered" | awk '{print $2}') == "yes" ]] || echo -e "\ndefault bluetooth controller is off (use commands: list and show)\n" # bluetoothctl power on


if [[ $HOSTNAME == "talos" ]]; then
    controller="00:1A:7D:DA:71:15"
    echo -e "select 58:6D:67:30:F6:91\npower off" | bluetoothctl
fi

# Load associative array with device name -> mac address
IFS="\n"

readarray -t a <"$DEVFILE"

declare -A devices

for e in ${a[@]}; do
	k=$(echo $e | awk '{print $1}')
	v=$(echo $e | awk '{print $2}')
	devices+=([$k]=$v)
done

has_dev() {
	[[ -v "devices[$1]" ]]
}

get_dev() {
	if [[ -n $1 ]]; then
		dev=$1
	else
		dev=$(printf "%s\n" ${!devices[@]} | fzf --header="device menu" --info="hidden")
	fi
	has_dev $dev || exit
	echo $dev # pseudo-return
}

if [[ $HOSTNAME = "prometheus" ]]; then
	target_bar="sys"
else
	target_bar="top"
fi

case $1 in
connect | con | c)
	dev=$(get_dev $2)
	[[ -z $dev ]] && echo "Invalid device" && exit 1
	mac=${devices[$dev]}
	bluetoothctl connect $mac | tee /tmp/bt.log
	if $(grep -q "Connection successful" /tmp/bt.log); then
		notify-send "$dev connected" -i ~/.config/dunst/images/bluetooth.png
	else
		notify-send "could not connect $dev" -i ~/.config/dunst/images/bluetooth.png
		exit 1
	fi
	polybar-msg -p "$(pgrep -f "polybar $target_bar")" hook volume 1 &>/dev/null
	[[ $dev = "wacom" ]] && config-wacom m
	if [[ $dev = "airpods" ]]; then
		pacmd list-cards | grep 'Bean Pods' -m 1 -B 5 | head -1 | xargs | awk '{print $2}' | xargs -I % pacmd set-card-profile % a2dp_sink
		sleep 0.5
	fi
	;;
disconnect | discon | d)
    if [[ $2 == "all" ]]; then
        for dev in ${!devices[@]}; do
            bt disconnect $dev
        done
        exit
    fi

	dev=$(get_dev $2)
	[[ -z $dev ]] && echo "Invalid device" && exit 1
	mac=${devices[$dev]}
	bluetoothctl disconnect $mac | tee /tmp/bt.log
	if $(grep -q "Successful disconnected" /tmp/bt.log); then
		notify-send "$dev disconnected" -i ~/.config/dunst/images/bluetooth.png
	else
		notify-send "could not disconnect $dev" -i ~/.config/dunst/images/bluetooth.png
		exit 1
	fi
	polybar-msg -p "$(pgrep -f "polybar $target_bar")" hook volume 1 &>/dev/null
	;;
toggle | tog | t)
	dev=$(get_dev $2)
	[[ -z $dev ]] && echo "Invalid device" && exit 1
	mac=${devices[$dev]}
	connected=$(bluetoothctl info $mac | grep "Connected" | awk '{ print $2 }')
	if [[ $connected == 'yes' ]]; then
		bt disconnect $dev
	else
		bt connect $dev
	fi
	;;
log | l)
	cat /tmp/bt.log
	;;
add | a)
	[[ -z $2 || -z $3 ]] && echo "Usage: bt add [name] [mac]" && exit 1
	echo "$2 $3" >>"$DEVFILE" && echo "Sucessfully added $2 ($3) to the list of devices"
	;;
remove)
	[[ -z $2 ]] && echo "Usage: bt remove [name]" && exit 1
	! has_dev $2 && echo "Invalid device \"$2\"" && exit 1
	sed -i "/^$2 /d" "$DEVFILE"
	;;
list)
	cat "$DEVFILE"
	;;
menu | m)
	outermenu="󰂱\n󰂲\n󰜉"
	op=$(echo -e "$outermenu" | rofi -no-fixed-num-lines -theme $HOME/.config/bt/btmenu.rasi -dmenu)
	[[ -z $op ]] && exit
	icons="蓼\n\n\n"
	# printf "%s\n" ${!devices[@]}
	sel=$(echo -e "$icons" | rofi -no-fixed-num-lines -theme $HOME/.config/bt/btmenu.rasi -dmenu)
	case $sel in
	蓼)
		dev="heater"
		;;
	)
		dev="airpods"
		;;
	)
		dev="headphones"
		;;
	)
		dev="wacom"
		;;
	esac
	case $op in
	󰂱)
		bt connect $dev
		;;
	󰂲)
		bt disconnect $dev
		;;
	󰜉)
		bt recon $dev
		;;
	esac
	;;
restart | r)
	sudo killall bluetoothd
	sudo systemctl restart bluetooth
	;;
recon | rc)
    bt disconnect $2
    bt connect $2
	;;
*)
	bluetoothctl $@
	;;
esac
