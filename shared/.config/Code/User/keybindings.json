// Place your key bindings in this file to override the defaults
[
    {
        "key": "space e",
        "command": "workbench.view.explorer",
        "when": "editorTextFocus && neovim.mode == 'normal' && !foldersViewVisible"
    },
    {
        "key": "space e",
        "command": "workbench.action.toggleSidebarVisibility",
        // "runCommands": [
        //     "workbench.action.quickOpenNavigatePreviousInFilePicker",
        //     "workbench.action.toggleSidebarVisibility"
        // ],
        "when": "foldersViewVisible && (( editorTextFocus && neovim.mode == 'normal') || sideBarFocus )"
    },
    {
        "key": "space f",
        "command": "editor.action.formatDocument",
        "when": "neovim.mode == 'normal' && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "space",
        "command": "-filesExplorer.openFilePreserveFocus",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "space a",
        "command": "vscode-harpoon.addEditor",
        "when": "neovim.mode == 'normal' && editorTextFocus"
    },
    {
        "key": "space h",
        "command": "vscode-harpoon.editorQuickPick",
        "when": "neovim.mode == 'normal' && editorTextFocus"
    },
    {
        "key": "shift+o",
        "command": "notebook.cell.insertCodeCellAboveAndFocusContainer",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "a",
        "command": "-notebook.cell.insertCodeCellAboveAndFocusContainer",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "o",
        "command": "notebook.cell.insertCodeCellBelowAndFocusContainer",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "b",
        "command": "-notebook.cell.insertCodeCellBelowAndFocusContainer",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "ctrl+j",
        "command": "editor.action.inlineSuggest.commit",
        "when": " inlineSuggestionVisible"
    },
    {
        "key": "tab",
        "command": "-editor.action.inlineSuggest.commit",
        "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+j",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'"
    },
    {
        "key": "escape",
        "command": "notebook.cell.quitEdit",
        "when": "notebookEditorFocused && notebookOutputFocused && neovim.mode == 'normal'"
    },
    {
        "key": "ctrl+space t",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+n",
        "command": "editor.action.marker.next",
        "when": "editorFocus && neovim.mode == 'normal'"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile",
        "when": "editorFocus"
    },
    {
        "key": "alt+f8",
        "command": "-editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "space n",
        "command": "workbench.action.files.newUntitledFile",
        "when": "editorFocus && neovim.mode == 'normal'"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "alt+l",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "alt+h",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+up",
        "command": "-workbench.action.focusAboveGroup"
    },
    {
        "key": "alt+j",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+k ctrl+down",
        "command": "-workbench.action.focusBelowGroup"
    },
    {
        "key": "shift+tab",
        "command": "-insertPrevSuggestion",
        "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "alt+j",
        "command": "workbench.action.navigateDown",
        "when": "!editorTextFocus ||  (editorTextFocus && neovim.mode == 'normal')"
    },
    {
        "key": "alt+h",
        "command": "workbench.action.navigateLeft",
        "when": "!editorTextFocus ||  (editorTextFocus && neovim.mode == 'normal')"
    },
    {
        "key": "alt+l",
        "command": "workbench.action.navigateRight",
        "when": "!editorTextFocus ||  (editorTextFocus && neovim.mode == 'normal')"
    },
    {
        "key": "space shift+f",
        "command": "workbench.action.quickOpen",
        "when": "neovim.mode == 'normal' && editorTextFocus"
    },
    {
        "key": "ctrl+w q",
        "command": "workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+k w",
        "command": "-workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+w q",
        "command": "-workbench.action.closeActiveEditor",
        "when": "!editorTextFocus && !filesExplorerFocus && !searchViewletFocus && !terminalFocus"
    },
    {
        "key": "ctrl+space s",
        "command": "notebook.cell.split",
        "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
    },
    {
        "key": "ctrl+k ctrl+shift+\\",
        "command": "-notebook.cell.split",
        "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
    },
    {
        "key": "alt+j",
        "command": "notebook.focusNextEditor",
        "when": "notebookEditorFocused"
    },
    {
        "key": "alt+k",
        "command": "notebook.focusPreviousEditor",
        "when": "notebookEditorFocused"
    },
    {
        "key": "up",
        "command": "notebook.focusPreviousEditor",
        "when": "notebookEditorFocused"
    },
    {
        "key": "up",
        "command": "-notebook.focusPreviousEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
    },
    {
        "key": "ctrl+g",
        "command": "github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
    },
    {
        "key": "ctrl+enter",
        "command": "-github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
    },
    {
        "key": "ctrl+n",
        "command": "editor.action.inlineSuggest.trigger",
        "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
    },
    {
        "key": "alt+\\",
        "command": "-editor.action.inlineSuggest.trigger",
        "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
    },
    {
        "key": "space /",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly && neovim.mode == 'normal'"
    },
    {
        "key": "ctrl+/",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "f",
        "command": "-notebook.find",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "space f",
        "command": "notebook.formatCell",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook' && neovim.mode == 'normal'"
    },
    {
        "key": "ctrl+enter",
        "command": "-notebook.cell.executeAndFocusContainer",
        "when": "notebookCellListFocused || editorTextFocus && inputFocus && notebookEditorFocused"
    },
    {
        "key": "ctrl+enter",
        "command": "notebook.cell.execute",
        "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
    },
    {
        "key": "meta+enter",
        "command": "-notebook.cell.execute",
        "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
    },
    {
        "key": "right",
        "command": "editor.action.inlineSuggest.acceptNextWord",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "ctrl+right",
        "command": "-editor.action.inlineSuggest.acceptNextWord",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "space r",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly && neovim.mode == 'normal'"
    },
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    }
]
